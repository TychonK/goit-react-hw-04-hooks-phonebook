{"version":3,"sources":["components/Contacts_List/ListItems.js","components/Form/Form.js","components/Filter/Filter.js","App.js","index.js"],"names":["ListItems","arr","filter","deleteContact","val","name","toLowerCase","includes","map","index","number","className","id","type","onClick","Form","addNewContact","existing","nameId","uuid","numberId","useState","setName","setNumber","onSubmit","e","preventDefault","some","alert","htmlFor","value","placeholder","pattern","title","required","onChange","target","Filter","handleSearch","App","contacts","setContacts","setFilter","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","obj","contactsList","contact","ReactDOM","render","document","getElementById"],"mappings":"8PAoBeA,MApBf,YAAoD,IAA/BC,EAA8B,EAA9BA,IAAKC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,cAe9B,OAdmBF,EAAIC,QAAO,SAACE,GAC3B,MAAe,KAAXF,GAEOE,EAAIC,KAAKC,cAAcC,SAASL,EAAOI,eADvCF,OACJ,KAGRI,KAAI,SAACJ,EAAKK,GACT,OACI,+BAAiBL,EAAIC,KAArB,KAA6BD,EAAIM,OAC7B,wBAAQC,UAAU,gBAAgBC,GAAIR,EAAIC,KAAMQ,KAAK,SAASC,QAASX,EAAvE,sBADKM,O,QCNd,SAASM,EAAT,GAA0C,IAA3BC,EAA0B,EAA1BA,cAAeC,EAAW,EAAXA,SAC3BC,EAASC,cACTC,EAAWD,cAEjB,EAAwBE,mBAAS,IAAjC,mBAAOhB,EAAP,KAAaiB,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOX,EAAP,KAAea,EAAf,KAyBA,OACI,uBAAMC,SAhBW,SAACC,IAClBA,EAAEC,iBACET,EAASU,MAAK,SAAAF,GAAC,OAAIA,EAAEpB,OAASA,MAC9BuB,MAAM,GAAD,OAAIvB,EAAJ,sBAOTW,EAJY,CACZX,KAAMA,EACNK,OAAQA,IAGRY,EAAQ,IACRC,EAAU,MAIV,UACE,wBAAOM,QAASX,EAAhB,UACE,sCACF,uBACEL,KAAK,OACHR,KAAK,OACLO,GAAIM,EACJY,MAAOzB,EACT0B,YAAY,0BACZC,QAAQ,yHACRC,MAAM,kcACJC,UAAQ,EACRC,SApCgB,SAACV,GACvBH,EAAQG,EAAEW,OAAON,aAsCf,wBAAOD,QAAST,EAAhB,UACE,wCACA,uBACEP,KAAK,MACLR,KAAK,SACLO,GAAIQ,EACJU,MAAOpB,EACPqB,YAAY,4BACZC,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SA9CkB,SAACV,GACzBF,EAAUE,EAAEW,OAAON,aAiDjB,wBAAQnB,UAAU,aAAaE,KAAK,SAApC,4BChEH,SAASwB,EAAT,GAAyC,IAAxBC,EAAuB,EAAvBA,aAAcpC,EAAS,EAATA,OAKlC,OACI,uBACIW,KAAK,SACLR,KAAK,aACLyB,MAAO5B,EACP6B,YAAY,aACZI,SAVU,SAACV,GACfa,EAAab,MCKN,SAASc,IACpB,MAAgClB,mBAAS,IAAzC,mBAAOmB,EAAP,KAAiBC,EAAjB,KACA,EAA4BpB,mBAAS,IAArC,mBAAOnB,EAAP,KAAewC,EAAf,KAEAC,qBAAU,WACFC,aAAaC,QAAQ,aACrBJ,EAAYK,KAAKC,MAAMH,aAAaC,QAAQ,gBAEjD,IAEHF,qBAAU,WACNC,aAAaI,QAAQ,WAAYF,KAAKG,UAAUT,MACjD,CAACA,IAeJ,OACE,sBAAK7B,UAAU,MAAf,UACE,cAACI,EAAD,CAAMC,cAfY,SAACkC,GACnBT,EAAY,GAAD,mBAAKD,GAAL,CAAeU,MAcUjC,SAAUuB,IAC9C,0CACA,uDACA,cAACH,EAAD,CAAQC,aAdS,SAACb,GAClBiB,EAAUjB,EAAEW,OAAON,QAaiB5B,OAAQA,IAC5C,6BACE,cAAC,EAAD,CAAWD,IAAKuC,EAAUtC,OAAQA,EAAQC,cAZ1B,SAACsB,GACnB,IAAM0B,EAAeX,EAAStC,QAAO,SAAAkD,GAAO,OAAIA,EAAQ/C,OAASoB,EAAEW,OAAOxB,MAC1E6B,EAAYU,WC1BpBE,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cc57098a.chunk.js","sourcesContent":["function ListItems({ arr, filter, deleteContact }) {\r\n    const listMarkup = arr.filter((val) => {\r\n        if (filter === \"\") {\r\n            return val\r\n        } else if (val.name.toLowerCase().includes(filter.toLowerCase())) {\r\n            return val\r\n        }\r\n    }).map((val, index) => {\r\n        return (\r\n            <li key={index}>{val.name}: {val.number}\r\n                <button className=\"delete-button\" id={val.name} type=\"button\" onClick={deleteContact}>Delete</button>\r\n            </li>\r\n            \r\n        )\r\n    })     \r\n    return (\r\n        listMarkup\r\n    )\r\n}\r\n\r\nexport default ListItems;","import { useState } from 'react'\r\nimport { v4 as uuid } from 'uuid'\r\n\r\nexport function Form({addNewContact, existing}) {\r\n    const nameId = uuid()\r\n    const numberId = uuid()\r\n\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const handleContactName = (e) => {\r\n        setName(e.target.value)\r\n    }\r\n\r\n    const handleContactNumber = (e) => {\r\n        setNumber(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (existing.some(e => e.name === name)) {\r\n            alert(`${name} already exists.`)\r\n            return\r\n        }\r\n        const obj = {\r\n        name: name,\r\n        number: number,\r\n        }\r\n        addNewContact(obj)\r\n        setName('')\r\n        setNumber('')\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n          <label htmlFor={nameId}>\r\n            <h2>Name</h2>\r\n          <input\r\n            type=\"text\"\r\n              name=\"name\"\r\n              id={nameId}\r\n              value={name}\r\n            placeholder=\"Enter contact's name...\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              onChange={handleContactName}\r\n          />\r\n          </label>\r\n          <label htmlFor={numberId}>\r\n            <h2>Number</h2>\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              id={numberId}\r\n              value={number}\r\n              placeholder=\"Enter contact's number...\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              onChange={handleContactNumber}\r\n            />\r\n\r\n          </label>\r\n          <button className=\"add-button\" type=\"submit\">Add contact</button>\r\n        </form>\r\n        )\r\n}","export function Filter({handleSearch, filter}) {\r\n    const filterNew = (e) => {\r\n        handleSearch(e)\r\n    }\r\n\r\n    return (\r\n        <input\r\n            type=\"search\"\r\n            name=\"nameSearch\"\r\n            value={filter}\r\n            placeholder=\"Enter name\"\r\n            onChange={filterNew}\r\n        />\r\n    )\r\n}","import './App.scss';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport ListItems from './components/Contacts_List/ListItems'\r\nimport { Form } from './components/Form/Form'\r\nimport { Filter } from './components/Filter/Filter'\r\n\r\nexport default function App() {\r\n    const [contacts, setContacts] = useState([]);\r\n    const [filter, setFilter] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"contacts\")) {\r\n            setContacts(JSON.parse(localStorage.getItem(\"contacts\")))\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"contacts\", JSON.stringify(contacts))\r\n    }, [contacts])\r\n\r\n    const addNewContact = (obj) => {\r\n        setContacts([...contacts, obj])\r\n    }\r\n  \r\n    const handleSearch = (e) => {\r\n        setFilter(e.target.value)\r\n    }\r\n\r\n    const deleteContact = (e) => {\r\n        const contactsList = contacts.filter(contact => contact.name !== e.target.id);\r\n        setContacts(contactsList)\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Form addNewContact={addNewContact} existing={contacts}/>\r\n        <h2>Contacts</h2>\r\n        <h3>Find contacts by name</h3>\r\n        <Filter handleSearch={handleSearch} filter={filter}/>\r\n        <ul>\r\n          <ListItems arr={contacts} filter={filter} deleteContact={ deleteContact }/>\r\n        </ul>\r\n      </div>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}